#pragma once

////////////////////////////////////////////////////////////////
// Current target includes.
////////////////////////////////////////////////////////////////

#include "floah-data/i_bool_data_source.h"

namespace floah
{
    class BoolDataSource : public IBoolDataSource
    {
    public:
        ////////////////////////////////////////////////////////////////
        // Constructors.
        ////////////////////////////////////////////////////////////////

        BoolDataSource() = delete;

        explicit BoolDataSource(bool& v);

        BoolDataSource(const BoolDataSource&) = delete;

        BoolDataSource(BoolDataSource&&) noexcept = delete;

        ~BoolDataSource() noexcept override;

        BoolDataSource& operator=(const BoolDataSource&) = delete;

        BoolDataSource& operator=(BoolDataSource&&) noexcept = delete;

        ////////////////////////////////////////////////////////////////
        // Getters.
        ////////////////////////////////////////////////////////////////

        [[nodiscard]] bool get() override;

        ////////////////////////////////////////////////////////////////
        // Setters.
        ////////////////////////////////////////////////////////////////

        void set(bool v) override;

        void toggle() override;

    private:
        ////////////////////////////////////////////////////////////////
        // Member variables.
        ////////////////////////////////////////////////////////////////

        bool* value = nullptr;
    };
}  // namespace floah
